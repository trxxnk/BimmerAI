from pathlib import Path

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
ROOT_DIR = Path(__file__).parent.absolute()

# –ü—É—Ç–∏ –∫ –¥–∞–Ω–Ω—ã–º
DATA_DIR = ROOT_DIR / 'data'

# üìÅ –§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö (—Ç–µ–ø–µ—Ä—å –ø–æ–ª–Ω—ã–µ –ø—É—Ç–∏)
BMW_PARSED = DATA_DIR / 'bmw_parsed.csv'
BMW_PREPROCESSED = DATA_DIR / 'bmw_preprocessed.csv'
BMW_ENCODED = DATA_DIR / 'bmw_preprocessed.csv'

# ‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
def check_paths():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
    paths = {
        'CARS_CSV': BMW_PARSED,
        'BMW_DATA_CSV': BMW_PREPROCESSED, 
        'BMW_PARSED': BMW_PARSED
    }
    
    for name, path in paths.items():
        if path.exists():
            print(f"‚úÖ {name}: {path}")
        else:
            print(f"‚ùå {name}: {path} (–Ω–µ –Ω–∞–π–¥–µ–Ω)")
    
    return paths

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
print("üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–µ–π –≤ config.py:")
_ = check_paths()